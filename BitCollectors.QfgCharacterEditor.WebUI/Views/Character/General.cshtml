@using BitCollectors.QfgCharacterEditor.WebUI.HtmlHelpers

@model BitCollectors.QfgCharacterEditor.Library.QfgCharacter

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "QFG Character Editor";
    ViewBag.SelectedTab = "General";
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#QfgGame").change(function () {
            goPage('/Character/ChangeGame');
        });

        $("#QfgClass").change(function () {
            changeCharacterImage();
        });

        $("#mainForm").validate({
            rules: {
                CharacterName: {
                    required: true
                }
            },
            errorPlacement: function (error, element) {
                var errorText = error.text();

                if (errorText == "") {
                    if (element.next("span") != null) {
                        element.next("span").remove();
                    }
                }
                else {
                    if (element.next("span").html() != "*") {
                        element.parent().append("<span style='color:red;font-weight:bold'>*</span>").attr('title', errorText);
                    }
                }
            },
            success: function (label) {
                if (label.next("span") != null) {
                    label.next("span").remove();
                }
            }
        });

        function changeCharacterImage() {
            var selectedGame = $("#QfgGame").val();
            var selectedClass = $("#QfgClass").val();

            switch (selectedGame) {
                case "QFG1":
                    switch (selectedClass) {
                        case "Fighter":
                            $("#divCharacterImg").css("background-image", "url('/Images/QFG1-Fighter.jpg')");
                            break;

                        case "Magic":
                            $("#divCharacterImg").css("background-image", "url('/Images/QFG1-Mage.jpg')");
                            break;

                        case "Thief":
                            $("#divCharacterImg").css("background-image", "url('/Images/QFG1-Thief.jpg')");
                            break;
                    }
                    break;

                case "QFG2":
                    switch (selectedClass) {
                        case "Fighter":
                        case "Paladin":
                            $("#divCharacterImg").css("background-image", "url('/Images/QFG2-Fighter.jpg')");
                            break;

                        case "Magic":
                            $("#divCharacterImg").css("background-image", "url('/Images/QFG2-Mage.jpg')");
                            break;

                        case "Thief":
                            $("#divCharacterImg").css("background-image", "url('/Images/QFG2-Thief.jpg')");
                            break;
                    }
                    break;
            }
        }

        changeCharacterImage();
    });
</script>

<form id="mainForm" method="post" action="">
    <div id="divCharacterImg"></div>

    <table cellpadding="0" cellspacing="0" border="0" class="tableData">
    <tr>
        <td class="tblHeading">Game:</td>
        <td>
            @Html.DropDownListFor(x => x.QfgGame, @Model.QfgGame.ToSelectList())
        </td>
    </tr>
    <tr>
        <td class="tblHeading">Class:</td>
        <td>
            @Html.DropDownListFor(x => x.QfgClass, (Model.QfgGameInfo.HasPaladin ? Model.QfgClass.ToSelectList() : Model.QfgClass.ToSelectList("Paladin")))
        </td>
    </tr>
    <tr>
        <td class="tblHeading">Character Name:</td>
        <td>
            @Html.TextBoxFor(x => x.CharacterName, new { @maxlength = 39 })
        </td>
    </tr>
    </table>
    @Html.HiddenFor(x => x.Acrobatics)
    @Html.HiddenFor(x => x.Agility)
    @Html.HiddenFor(x => x.Climbing)
    @Html.HiddenFor(x => x.Communication)
    @Html.HiddenFor(x => x.Dodge)
    @Html.HiddenFor(x => x.Intelligence)
    @Html.HiddenFor(x => x.InventoryDaggers)
    @Html.HiddenFor(x => x.InventoryHealingPotions)
    @Html.HiddenFor(x => x.InventoryMagicPotions)
    @Html.HiddenFor(x => x.InventoryVigorPotions)
    @Html.HiddenFor(x => x.InventoryPoisonCurePotions)
    @Html.HiddenFor(x => x.Luck)
    @Html.HiddenFor(x => x.Magic)
    @Html.HiddenFor(x => x.MagicSkillCalm)
    @Html.HiddenFor(x => x.MagicSkillDazzle)
    @Html.HiddenFor(x => x.MagicSkillDetect)
    @Html.HiddenFor(x => x.MagicSkillFetch)
    @Html.HiddenFor(x => x.MagicSkillFlame)
    @Html.HiddenFor(x => x.MagicSkillForceBolt)
    @Html.HiddenFor(x => x.MagicSkillLevitate)
    @Html.HiddenFor(x => x.MagicSkillOpen)
    @Html.HiddenFor(x => x.MagicSkillReversal)
    @Html.HiddenFor(x => x.MagicSkillTrigger)
    @Html.HiddenFor(x => x.MagicSkillZap)
    @Html.HiddenFor(x => x.Parry)
    @Html.HiddenFor(x => x.PickLocks)
    @Html.HiddenFor(x => x.Stealth)
    @Html.HiddenFor(x => x.Strength)
    @Html.HiddenFor(x => x.Throwing)
    @Html.HiddenFor(x => x.Vitality)
    @Html.HiddenFor(x => x.WeaponUse)
    @Html.HiddenFor(x => x.Honor)

    @Html.Hidden("Page", "General")
</form>